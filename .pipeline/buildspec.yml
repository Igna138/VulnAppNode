version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
      golang: 1.24
    commands:
      - echo "Instalando dependencias de Node.js..."
      - npm install
      - echo "Instalando Snyk CLI..."
      - npm install -g snyk
      - echo "Instalando Semgrep..."
      - pip install semgrep
      - echo "Instalando Trivy..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      - echo "Instalando dependencias"
      - yum install -y make git
      - echo "Instalando Gitleaks..."
      - git clone https://github.com/gitleaks/gitleaks.git
      - chmod +x gitleaks
      - cd gitleaks
      - echo "Compilando Gitleaks"
      - make build


  pre_build:
    commands:
      - echo "Autenticando con Snyk..."
      - snyk auth $SNYK_TOKEN
      - echo "Logueando en Amazon ECR..."
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 833185305243.dkr.ecr.eu-north-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_REPO_NAME=repositorio/vulnodeapp

  build:
    commands:
      - echo "Build iniciado el `date`"
      - echo "Escaneando dependencias con Snyk..."
      - snyk test --json > snyk-report.json || true
      - echo "Escaneo de Snyk completado."

      - echo "Ejecutando análisis SAST con Semgrep..."
      - semgrep --config auto --json --output semgrep-report.json || true

      - echo "Construyendo imagen Docker..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 833185305243.dkr.ecr.eu-north-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Push de imagen a ECR..."
      - docker push 833185305243.dkr.ecr.eu-north-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      - echo "Escribiendo archivo de definición..."
      - printf '[{"name":"vulnnodeapp-container","imageUri":"%s"}]' 833185305243.dkr.ecr.eu-north-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

      - echo "Escaneando contenedor Docker con Trivy..."
      - trivy image --format json --output trivy-report.json 833185305243.dkr.ecr.eu-north-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG || true

      - echo "Ejecutando Gitleaks"
      - gitleaks detect --source . --report-format json --report-path gitleaks-report.json || true

artifacts:
  files:
    - snyk-report.json
    - semgrep-report.json
    - trivy-report.json
    - imagedefinitions.json
    - gitleaks-report.json
